#SENSOR DE HUMEDAD

import time #
import serial #
import requests #
import random #

ser = serial.Serial('/dev/ttyS0', 9600,timeout=3.0) #update with port for Arduino
ENDPOINT = "things.ubidots.com"
DEVICE_LABEL = "sensor_humedad"
TOKEN = "BBFF-DYqealDhZrMYkbLxxSQllqO5gZYvhL"
VARIABLE_LABEL_1 = "humedad"  #Valor de humedad en la tierra

STATE1 = 'Valvestatus' #Estado de la valvula

delay = 1
datos = []

def post_var(payload, url=ENDPOINT, device=DEVICE_LABEL, token=TOKEN): #Funcion para cnectarme a la nube
    try:
        url = "http://{}/api/v1.6/devices/{}".format(url, device)
        headers = {"X-Auth-Token": token, "Content-Type": "application/json"}

        attempts = 0
        status_code = 400

        while status_code >= 400 and attempts < 5:
            print("[INFO] Sending data, attempt number: {}".format(attempts))
            req = requests.post(url=url, headers=headers,
                                json=payload)
            status_code = req.status_code
            attempts += 1
            time.sleep(1)

        print("[INFO] Results:")
        print(req.text)
    except Exception as e:
        print("[ERROR] Error posting, details: {}".format(e))

def recibir_data(): #Leo los datos del arduino [Comunicacion serial]
    while(ser.in_waiting > 0):
        data = ser.readline().strip().decode().split('//') #Devuelve una lista ["$00", 1.50 ,0]
        return data
    return False

def main():
    datos = recibir_data()
    if(datos != False):
        if(datos[0] == "$00"): #Validadmos nuestro identificador
            print(datos)
            ID = datos[0]
            humedad = datos[1]
            estado = datos[2]
        
            #Builds Payload and top√≠c
            payload = {VARIABLE_LABEL_1: humedad,
                       STATE1: estado} 
            
            # Sends data
            post_var(payload)
                
        else:
            return


if __name__ == '__main__':
    while (True):
        main()
        time.sleep(1)
